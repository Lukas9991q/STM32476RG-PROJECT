// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_bgothl_12_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   4,   0,   0, 0x00 }, // space
    {     0, 0x0021,   3,   6,   6,   1,   5,   0,   0, 0x00 }, // exclam
    {    12, 0x0022,   3,   4,   9,   0,   3,   0,   0, 0x00 }, // quotedbl
    {    20, 0x0023,   9,   9,   9,   0,   9,   0,   0, 0x00 }, // numbersign
    {    65, 0x0024,   7,  10,   8,   1,   9,   0,   0, 0x00 }, // dollar
    {   105, 0x0025,  10,   6,   6,   0,  10,   0,   0, 0x00 }, // percent
    {   135, 0x0026,   8,   6,   6,   1,   9,   0,   0, 0x00 }, // ampersand
    {   159, 0x0027,   2,   4,   9,   0,   2,   0,   0, 0x00 }, // quotesingle
    {   163, 0x0028,   3,   6,   6,   1,   4,   0,   0, 0x00 }, // parenleft
    {   175, 0x0029,   3,   6,   6,   1,   4,   0,   0, 0x00 }, // parenright
    {   187, 0x002A,   4,   4,   6,   1,   6,   0,   0, 0x00 }, // asterisk
    {   195, 0x002B,   8,   7,   7,   1,  10,   0,   0, 0x00 }, // plus
    {   223, 0x002C,   2,   4,   2,   1,   4,   0,   6, 0x00 }, // comma
    {   227, 0x002D,   4,   1,   4,   0,   4,   6,   1, 0x00 }, // hyphen
    {   229, 0x002E,   2,   2,   2,   1,   4,   7,   6, 0x00 }, // period
    {   231, 0x002F,   4,   6,   6,   0,   4,   0,   0, 0x00 }, // slash
    {   243, 0x0030,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // zero
    {   267, 0x0031,   4,   6,   6,   2,   9,   0,   0, 0x00 }, // one
    {   279, 0x0032,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // two
    {   303, 0x0033,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // three
    {   327, 0x0034,   8,   6,   6,   1,   9,   0,   0, 0x00 }, // four
    {   351, 0x0035,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // five
    {   375, 0x0036,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // six
    {   399, 0x0037,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // seven
    {   423, 0x0038,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // eight
    {   447, 0x0039,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // nine
    {   471, 0x003A,   2,   5,   5,   1,   4,  13,   2, 0x00 }, // colon
    {   476, 0x003B,   2,   7,   5,   1,   4,  15,   2, 0x00 }, // semicolon
    {   483, 0x003C,   8,   7,   7,   1,  10,   0,   0, 0x00 }, // less
    {   511, 0x003D,   8,   3,   5,   1,  10,   0,   0, 0x00 }, // equal
    {   523, 0x003E,   8,   7,   7,   1,  10,   0,   0, 0x00 }, // greater
    {   551, 0x003F,   6,   6,   6,   1,   8,   0,   0, 0x00 }, // question
    {   569, 0x0040,  12,  10,   8,   0,  12,   0,   0, 0x00 }, // at
    {   629, 0x0041,   9,   6,   6,   0,   9,  17,   1, 0x00 }, // A
    {   659, 0x0042,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // B
    {   683, 0x0043,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // C
    {   707, 0x0044,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // D
    {   731, 0x0045,   7,   6,   6,   1,   8,   0,   0, 0x00 }, // E
    {   755, 0x0046,   7,   6,   6,   1,   8,   0,   0, 0x00 }, // F
    {   779, 0x0047,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // G
    {   803, 0x0048,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // H
    {   827, 0x0049,   2,   6,   6,   1,   4,   0,   0, 0x00 }, // I
    {   833, 0x004A,   6,   6,   6,   1,   8,   0,   0, 0x00 }, // J
    {   851, 0x004B,   8,   6,   6,   1,   9,   0,   0, 0x00 }, // K
    {   875, 0x004C,   7,   6,   6,   1,   8,   0,   0, 0x00 }, // L
    {   899, 0x004D,   9,   6,   6,   1,  11,   0,   0, 0x00 }, // M
    {   929, 0x004E,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // N
    {   953, 0x004F,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // O
    {   977, 0x0050,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // P
    {  1001, 0x0051,   8,   8,   6,   1,  10,   0,   0, 0x00 }, // Q
    {  1033, 0x0052,   8,   6,   6,   1,   9,   0,   0, 0x00 }, // R
    {  1057, 0x0053,   7,   6,   6,   1,   9,   0,   0, 0x00 }, // S
    {  1081, 0x0054,   7,   6,   6,   0,   7,  18,   1, 0x00 }, // T
    {  1105, 0x0055,   8,   6,   6,   1,  10,   0,   0, 0x00 }, // U
    {  1129, 0x0056,   8,   6,   6,   0,   8,  19,   1, 0x00 }, // V
    {  1153, 0x0057,  10,   6,   6,   0,  10,   0,   0, 0x00 }, // W
    {  1183, 0x0058,   8,   6,   6,   0,   9,   0,   0, 0x00 }, // X
    {  1207, 0x0059,   8,   6,   6,   0,   8,  20,   2, 0x00 }, // Y
    {  1231, 0x005A,   7,   6,   6,   0,   8,   0,   0, 0x00 }, // Z
    {  1255, 0x005B,   3,   6,   6,   1,   4,   0,   0, 0x00 }, // bracketleft
    {  1267, 0x005C,   4,   6,   6,   0,   4,   0,   0, 0x00 }, // backslash
    {  1279, 0x005D,   4,   6,   6,   0,   4,   0,   0, 0x00 }, // bracketright
    {  1291, 0x005E,   8,   3,   8,   2,  12,   0,   0, 0x00 }, // asciicircum
    {  1303, 0x005F,   6,   1, 254,   0,   6,   0,   0, 0x60 }, // underscore
    {  1306, 0x0060,   3,   2,   8,   1,   6,   0,   0, 0x00 }, // grave
    {  1310, 0x0061,   7,   5,   5,   0,   8,  22,   3, 0x00 }, // a
    {  1330, 0x0062,   6,   5,   5,   1,   8,   0,   0, 0x00 }, // b
    {  1345, 0x0063,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // c
    {  1360, 0x0064,   7,   5,   5,   1,   9,   0,   0, 0x00 }, // d
    {  1380, 0x0065,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // e
    {  1395, 0x0066,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // f
    {  1410, 0x0067,   6,   5,   5,   1,   8,   0,   0, 0x00 }, // g
    {  1425, 0x0068,   7,   5,   5,   1,   8,   0,   0, 0x00 }, // h
    {  1445, 0x0069,   2,   5,   5,   1,   3,   0,   0, 0x00 }, // i
    {  1450, 0x006A,   6,   5,   5,   0,   7,   0,   0, 0x00 }, // j
    {  1465, 0x006B,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // k
    {  1480, 0x006C,   6,   5,   5,   1,   6,   0,   0, 0x00 }, // l
    {  1495, 0x006D,   7,   5,   5,   1,   9,   0,   0, 0x00 }, // m
    {  1515, 0x006E,   7,   5,   5,   1,   8,   0,   0, 0x00 }, // n
    {  1535, 0x006F,   7,   5,   5,   1,   8,   0,   0, 0x00 }, // o
    {  1555, 0x0070,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // p
    {  1570, 0x0071,   7,   7,   5,   1,   8,   0,   0, 0x00 }, // q
    {  1598, 0x0072,   6,   5,   5,   1,   7,   0,   0, 0x00 }, // r
    {  1613, 0x0073,   6,   5,   5,   1,   8,   0,   0, 0x00 }, // s
    {  1628, 0x0074,   6,   5,   5,   0,   6,   0,   0, 0x00 }, // t
    {  1643, 0x0075,   6,   5,   5,   1,   8,   0,   0, 0x00 }, // u
    {  1658, 0x0076,   7,   5,   5,   0,   7,   0,   0, 0x00 }, // v
    {  1678, 0x0077,   9,   5,   5,   0,   9,   0,   0, 0x00 }, // w
    {  1703, 0x0078,   7,   5,   5,   0,   7,   0,   0, 0x00 }, // x
    {  1723, 0x0079,   7,   5,   5,   0,   7,  25,   2, 0x00 }, // y
    {  1743, 0x007A,   7,   5,   5,   0,   7,   0,   0, 0x00 }, // z
    {  1763, 0x007B,   4,  11,   8,   1,   6,   0,   0, 0x00 }, // braceleft
    {  1785, 0x007C,   2,  12,   9,   2,   6,   0,   0, 0x00 }, // bar
    {  1797, 0x007D,   4,  11,   8,   1,   6,   0,   0, 0x00 }, // braceright
    {  1819, 0x007E,   8,   2,   5,   1,  10,   0,   0, 0x00 }  // asciitilde
};

// bgothl_12_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_bgothl_12_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_bgothl_12_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_bgothl_12_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_bgothl_12_4bpp_0
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_bgothl_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_bgothl_12_4bpp();

touchgfx::GeneratedFont& getFont_bgothl_12_4bpp()
{
    static touchgfx::GeneratedFont bgothl_12_4bpp(glyphs_bgothl_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_bgothl_12_4bpp, kerning_bgothl_12_4bpp, 0, 0, 0, 0);
    return bgothl_12_4bpp;
}
